var _user$project$Utils$costInput = function (cost) {
	return _elm_lang$core$Native_Utils.eq(cost, 0) ? '' : A2(
		_elm_lang$core$Basics_ops['++'],
		'â‚¬',
		_elm_lang$core$Basics$toString(cost));
};
var _user$project$Utils$toCost = function (string) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$length(string),
		0) ? 0 : (_elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$length(string),
		1) ? A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toFloat(string)) : A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toFloat(
			A2(_elm_lang$core$String$dropLeft, 1, string))));
};
var _user$project$Utils$removeWithId = F2(
	function (id, list) {
		return A2(
			_elm_lang$core$List$filter,
			function (item) {
				return !_elm_lang$core$Native_Utils.eq(item.id, id);
			},
			list);
	});
var _user$project$Utils$applyIfId = F3(
	function (id, fn, item) {
		return _elm_lang$core$Native_Utils.eq(item.id, id) ? _elm_lang$core$Native_Utils.update(
			item,
			{
				model: fn(item.model)
			}) : item;
	});
var _user$project$Utils$updateWithId = F3(
	function (id, fn, list) {
		return A2(
			_elm_lang$core$List$map,
			A2(_user$project$Utils$applyIfId, id, fn),
			list);
	});
