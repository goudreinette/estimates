var _user$project$Utils$toCost = function (string) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$length(string),
		0) ? 0 : (_elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$length(string),
		1) ? A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toFloat(string)) : A2(
		_elm_lang$core$Result$withDefault,
		0,
		_elm_lang$core$String$toFloat(
			A2(_elm_lang$core$String$dropLeft, 1, string))));
};
var _user$project$Utils$addSubOption = F2(
	function (subOption, record) {
		return _elm_lang$core$Native_Utils.update(
			record,
			{
				subOptions: A2(
					_elm_lang$core$Basics_ops['++'],
					record.subOptions,
					_elm_lang$core$Native_List.fromArray(
						[subOption]))
			});
	});
var _user$project$Utils$updateFormOptions = F2(
	function (fn, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				formOptions: fn(model.formOptions)
			});
	});
var _user$project$Utils$updateLabel = F2(
	function (newLabel, record) {
		return _elm_lang$core$Native_Utils.update(
			record,
			{label: newLabel});
	});
var _user$project$Utils$updateCost = F2(
	function (newCost, record) {
		return _elm_lang$core$Native_Utils.update(
			record,
			{cost: newCost});
	});
var _user$project$Utils$updateDescription = F2(
	function (newDescription, record) {
		return _elm_lang$core$Native_Utils.update(
			record,
			{description: newDescription});
	});
var _user$project$Utils$updateTitle = F2(
	function (newTitle, record) {
		return _elm_lang$core$Native_Utils.update(
			record,
			{title: newTitle});
	});
var _user$project$Utils$removeWithId = F2(
	function (id, list) {
		return A2(
			_elm_lang$core$List$filter,
			function (item) {
				return !_elm_lang$core$Native_Utils.eq(item.id, id);
			},
			list);
	});
var _user$project$Utils$applyIfId = F3(
	function (fn, id, item) {
		return _elm_lang$core$Native_Utils.eq(item.id, id) ? fn(item) : item;
	});
var _user$project$Utils$withId = F3(
	function (fn, id, list) {
		return A2(
			_elm_lang$core$List$map,
			A2(_user$project$Utils$applyIfId, fn, id),
			list);
	});
var _user$project$Utils$updateById = F3(
	function (fn, optionId, model) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				formOptions: A3(_user$project$Utils$withId, fn, optionId, model.formOptions)
			});
	});
var _user$project$Utils$WithId = function (a) {
	return {id: a};
};
